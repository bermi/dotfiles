[user]
  name = <%= print("Your Name: "); STDOUT.flush; STDIN.gets.chomp %>
  email = <%= print("Your Email: "); STDOUT.flush; STDIN.gets.chomp %>
[github]
  user = <%= print("GitHub Username: "); STDOUT.flush; STDIN.gets.chomp %>
  token = <%= print("GitHub API Token: "); STDOUT.flush; STDIN.gets.chomp %>
[color]
  diff = auto
  branch = auto
  ui = auto
[color "status"]
  header = normal
  added = magenta yellow
  updated = green reverse
  changed = red bold
  untracked = blue white
  nobranch = red white bold
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol  
  excludesfile = ~/.gitignore
[diff]  
  renamelimit = 0
[instaweb]
  local = true
  browser = chrome
[rerere]
    enabled = true
[alias]
  # https://git.wiki.kernel.org/index.php/Aliases
  # add all changed (but not new) files to stage (index):
  au = add -u
  br = branch
  ci = commit -v
  cia = commit -v -a
  co = checkout
  # show conflicting merge in gitk:
  gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
  # show full history in gitk (including "deleted" branches and stashes)
  history-all = !gitk --all $( git fsck | awk '/dangling commit/ {print $3}' )
  lg = log -p
  pom = push origin master
  # prune all tracking local branches that have been removed from remote:
  prune-all = !git remote | xargs -n 1 git remote prune
  # show list of contributors in descending order by number of commits
  rank = shortlog -sn --no-merges
  # Search for a given string in all patches and print commit messages
  # example: search for any commit that adds or removes string "foobar"
  #     git searchcommits foobar
  # example: search commits for string "foobar" in directory src/lib
  #     git searchcommits foobar src/lib
  # example: search commits for "foobar", print full diff of commit with 1 line context
  #     git searchcommits foobar --pickaxe-all -U1 src/lib
  searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""
  st = status
  up = pull origin
  who = shortlog -s --
  # usage example: git w -n5
  w = whatchanged
  # given any git object, try to show it briefly
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  # given a string for an author, try to figure out full name and email:
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"