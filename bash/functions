
# Shows branch/tag name on different SCM
showBranch () {
  if [`pwd | grep -i "work|sites|projects|code|src"` != ""]; then
    # Show git branch
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/±\1/' | tr "\n" ":"
    # Show hg branch
    hg branch 2> /dev/null | sed -e 's/\(.*\)/☿\1:/'
    # Show CVS branch
    if [ -d CVS ]; then if [ -e CVS/Tag ]; then cat CVS/Tag 2> /dev/null | sed -e 's/\(.*\)/☹\1:/'; else echo '☹MAIN:' 2> /dev/null ; fi; else echo ''  2> /dev/null ;fi
  fi
}

# Manpage in Preview.app
pman () {
  man -t $* | ps2pdf - - | open -g -f -a /Applications/Preview.app
}

# Manpage in TextMate
tman () {
  MANWIDTH=160 MANPAGER='col -bx' man $@ | mate
}

# Quit an OS X application from the command line
quit () {
    for app in $*; do
        osascript -e 'quit app "'$app'"'
    done
}

# Git Commit pending changes and quote all args as message
function gg () {
  git commit -v -a -m "$*"
}

# Translates a word. By default from english to spanish
translate () {
  wget -qO- "http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=$1&langpair=${2:-en}|${3:-es}" | sed -E -n 's/[[:alnum:]": {}]+"translatedText":"([^"]+)".*/\1/p';
  echo ''
  return 0;
}

# Creates a directory and moves into it
function take () {
  mkdir -p $1;
  cd $1;
}


# Use 'o' instead of 'open' (o ~/Sites will open the sites folder)
# If no arguments are supplied open the current folder
function o {
  if [ "$1" != "" ]; then
    open "$*"
  else
    open .
  fi
}


# Returns the word count for a given term on the current folder files
function wordcount () {
  grep -ir "$1" * | wc -l;
}

function generatessl() {
  openssl genrsa -out privatekey.pem 1024 && \
  openssl req -new -key privatekey.pem -out certrequest.csr  && \
  openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem
}


# Safe password management adapted from Jason Mooberry
# http://blog.jasonmooberry.com/2011/08/password-management-with-truecrypt-and-dropbox/

# password generator
# Usage: genpass test.account.name
function genpass() {
  # apg -n 1 -a 0 -m 20 -x 30 -M NSCL
  pass=$(apg -n 1)
  echo -n $pass | pbcopy
  if [ $# == 1 ]; then
    pass=$(encrypt "$pass")
    echo "$1	$pass" >> /Volumes/Private/passwords.txt
    echo "password added to passwords.txt as $1"
  fi
  echo "password copied to clipboard."
}

# password grabber
# Usage: getpass test.account.name
function getpass() {
  pass=$(showpass "$1")
  echo -n $pass | pbcopy
  echo "password copied to clipboard."
}

# password display
# Usage: showpass test.account.name
function showpass() {
  pass=$(grep "$1	" /Volumes/Private/passwords.txt | tail -n 1 | cut -f 2)
  pass=$(decrypt "$pass")
  echo "$pass"
}

function decrypt() {
  echo "$1" | openssl enc -aes-256-cbc -a -kfile /Volumes/Private/rsa_keys/private-key.rsa -d
}

function encrypt() {
  echo "$1" | openssl enc -aes-256-cbc -a -kfile /Volumes/Private/rsa_keys/private-key.rsa
}
